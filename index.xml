<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Siddharth Mittal on Siddharth Mittal</title>
    <link>https://smittal6.github.io/</link>
    <description>Recent content in Siddharth Mittal on Siddharth Mittal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-in</language>
    <copyright>&amp;copy; 2017 Siddharth Mittal</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Comparing GAN-Hacks</title>
      <link>https://smittal6.github.io/post/gans/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://smittal6.github.io/post/gans/</guid>
      <description>

&lt;p&gt;I finally successfully trained a simple Generative Adversarial Network. GANs are notoriously hard to train, and I decided to find out how different &lt;a href=&#34;https://github.com/soumith/ganhacks&#34; target=&#34;_blank&#34;&gt;tricks&lt;/a&gt; help in the cause.&lt;/p&gt;

&lt;p&gt;The architecture was pretty simple: a few fully connected layers, as the data is not very complex. Both the discriminator and generator had similar number of parameters.&lt;/p&gt;

&lt;h2 id=&#34;training-params&#34;&gt;Training Params&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Dataset: MNIST&lt;/li&gt;
&lt;li&gt;Optimizer: Adam&lt;/li&gt;
&lt;li&gt;Learning Rate: 0.0001&lt;/li&gt;
&lt;li&gt;Epochs: 25&lt;/li&gt;
&lt;li&gt;128 valued random noise&lt;/li&gt;
&lt;li&gt;Loss: One of (MSELoss, BCEWithLogitsLoss)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;

&lt;h3 id=&#34;no-batch-normalization-leakyrelu-activation&#34;&gt;No Batch Normalization, LeakyRELU Activation:&lt;/h3&gt;

&lt;table align=&#39;center&#39; border=&#39;1&#39;&gt;
&lt;tr align=&#39;center&#39;&gt;
&lt;td&gt; Epoch 1 &lt;/td&gt;
&lt;td&gt; Epoch 12 &lt;/td&gt;
&lt;td&gt; Epoch 25 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/nobn0.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/nobn12.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/nobn25.png&#39;&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&#34;batch-normalization-leakyrelu-activation&#34;&gt;Batch Normalization, LeakyReLU Activation:&lt;/h3&gt;

&lt;table align=&#39;center&#39; border=&#39;1&#39;&gt;
&lt;tr align=&#39;center&#39;&gt;
&lt;td&gt; Epoch 1 &lt;/td&gt;
&lt;td&gt; Epoch 12 &lt;/td&gt;
&lt;td&gt; Epoch 25 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnlrelu0.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnlrelu12.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnlrelu25.png&#39;&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&#34;batch-normalization-prelu-activation&#34;&gt;Batch Normalization, PReLU Activation:&lt;/h3&gt;

&lt;table align=&#39;center&#39; border=&#39;1&#39;&gt;
&lt;tr align=&#39;center&#39;&gt;
&lt;td&gt; Epoch 1 &lt;/td&gt;
&lt;td&gt; Epoch 12 &lt;/td&gt;
&lt;td&gt; Epoch 25 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnprelu0.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnprelu12.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnprelu25.png&#39;&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&#34;batch-normalization-relu-activation&#34;&gt;Batch Normalization, ReLU Activation:&lt;/h3&gt;

&lt;table align=&#39;center&#39; border=&#39;1&#39;&gt;
&lt;tr align=&#39;center&#39;&gt;
&lt;td&gt; Epoch 1 &lt;/td&gt;
&lt;td&gt; Epoch 12 &lt;/td&gt;
&lt;td&gt; Epoch 25 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnrelu0.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnrelu12.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/bnrelu25.png&#39;&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&#34;mean-square-loss-batch-normalization-leakyrelu-activation&#34;&gt;Mean Square Loss, Batch Normalization, LeakyReLU Activation:&lt;/h3&gt;

&lt;table align=&#39;center&#39; border=&#39;1&#39;&gt;
&lt;tr align=&#39;center&#39;&gt;
&lt;td&gt; Epoch 1 &lt;/td&gt;
&lt;td&gt; Epoch 12 &lt;/td&gt;
&lt;td&gt; Epoch 25 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/lslrelu0.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/lslrelu12.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/lslrelu25.png&#39;&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&#34;mean-square-loss-batch-normalization-relu-activation&#34;&gt;Mean Square Loss, Batch Normalization, ReLU Activation:&lt;/h3&gt;

&lt;table align=&#39;center&#39; border=&#39;1&#39;&gt;
&lt;tr align=&#39;center&#39;&gt;
&lt;td&gt; Epoch 1 &lt;/td&gt;
&lt;td&gt; Epoch 12 &lt;/td&gt;
&lt;td&gt; Epoch 25 &lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/lsrelu0.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/lsrelu12.png&#39;&gt;
&lt;td&gt;&lt;img src = &#39;/img/gan/lsrelu25.png&#39;&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;h3 id=&#34;observations&#34;&gt;Observations&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;LeakyReLU doesn&amp;rsquo;t seem to work as good as claimed against ReLU. Maybe because there is no convolutional layer involved in this architecture.&lt;/li&gt;
&lt;li&gt;Batch Normalization helps. For the &amp;lsquo;No BatchNormalization&amp;rsquo; case, we see all the digits are similar. I guess Batch Normalization provides the necessary variance needed to get different digits, for other cases.&lt;/li&gt;
&lt;li&gt;Square Loss is impressive. It gave better images for both LeakyReLU and ReLU activations.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Markov Chains and Hidden Markov Models</title>
      <link>https://smittal6.github.io/project/markov/</link>
      <pubDate>Mon, 10 Jul 2017 22:39:51 +0530</pubDate>
      
      <guid>https://smittal6.github.io/project/markov/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Reading project for CS201 [Discrete Math] course at IITK.&lt;/li&gt;
&lt;li&gt;Read the classic &lt;a href=&#34;http://ai.stanford.edu/~pabbeel/depth_qual/Rabiner_Juang_hmms.pdf&#34; target=&#34;_blank&#34;&gt;paper&lt;/a&gt; by Rabiner and Juang&lt;/li&gt;
&lt;li&gt;Gave a &lt;a href=&#34;https://github.com/smittal6/markov-and-hmm&#34; target=&#34;_blank&#34;&gt;presentation&lt;/a&gt; based on the paper&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Speaker Change Detection</title>
      <link>https://smittal6.github.io/project/scd/</link>
      <pubDate>Mon, 10 Jul 2017 21:51:43 +0530</pubDate>
      
      <guid>https://smittal6.github.io/project/scd/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
